version: "3.9"
services:
  keycloak.casi.uwdigi.org:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    restart: always
    command: ["start"]
    environment:
      KC_DB: postgres
      DB_VENDOR: postgres
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_DB_URL_HOST: postgres_keycloak
      KC_DB_URL_DATABASE: ${DB_DATABASE}
      KC_DB_USERNAME: ${DB_USERNAME}
      KC_DB_PASSWORD: ${DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_DEFAULT_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_DEFAULT_PASSWORD}
      KC_PROXY: edge
      PROXY_ADDRESS_FORWARDING: true
      KEYCLOAK_PRODUCTION: true
      KEYCLOAK_JDBC_PARAMS: sslmode=disable&connectTimeout=40000
      KEYCLOAK_EXTRA_ARGS: "-Dkeycloak.profile.feature.scripts=enabled"
      KEYCLOAK_ENABLE_HTTPS: true
      KC_HOSTNAME: ${HOSTNAME}
      KEYCLOAK_HTTPS_CERTIFICATE_FILE: /etc/nginx/certs/casi_certificate.crt
      KEYCLOAK_HTTPS_CERTIFICATE_KEY_FILE: /etc/nginx/certs/casi_key.key
      TZ: Africa/Nairobi
    ports:
      - "8180:8080"
      - "444:443"
    depends_on:
      postgres_keycloak:
        condition: service_healthy
    networks:
      - casiplus-network
  
  postgres_keycloak:
    container_name: keycloak-db
    image: postgres:14.4
    command: postgres -c 'max-connections=200'
    volumes:
      - data-keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: 'exit 0'
    ports:
      - "5836:5432"
    networks:
      - casiplus-network

  fhir.casi.uwdigi.org:
    container_name: fhir
    restart: on-failure
    build: ../hapi-fhir-jpaserver-starter
    ports:
      - "8080:8080"
      - "445:443"
    depends_on:
      - fhir-db
    networks:
      - casiplus-network
    volumes:
      - ./nginx/security/keystore:/etc/casiplus/keystore
      - ./nginx/security/truststore:/etc/casiplus/truststore
    environment:
      TZ: Africa/Nairobi
      JAVA_OPTS: "-Djavax.net.ssl.trustStore=/etc/casiplus/truststore 
                      -Djavax.net.ssl.trustStorePassword=TVghhDVK8xS8H3
                      -Djavax.net.ssl.trustStoreType=pkcs12 
                      -Djavax.net.ssl.keyStore=/etc/casiplus/keystore 
                      -Djavax.net.ssl.keyStorePassword=TVghhDVK8xS8H3 
                      -Djavax.net.ssl.keyStoreType=pkcs12" 
  
  fhir-db:
    container_name: fhir-db
    image: postgres:14.4
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: hapi-fhir
      POSTGRES_DB: hapi-fhir
    ports:
      - "5432:5432"
    volumes:
      - hapi-fhir-data:/var/lib/postgresql/data
    networks:
      - casiplus-network
  
  proxy:
    image: nginx:latest
    container_name: proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/security:/etc/nginx/certs
    networks:
      - casiplus-network
    depends_on:
      - keycloak.casi.uwdigi.org
      - fhir.casi.uwdigi.org
  
  fhir-web:
    platform: linux/x86_64
    image: opensrp/web:latest
    ports:
      - '3000:3000'
    volumes:
      # volume with React front-end environment variables
      - ./config.js.tpl:/etc/confd/templates/config.js.tmpl
    environment:
      # optional overrides
      - 'NODE_ENV=production' # 'NODE_ENV=development' if fhir-web-base-url === http://localhost:3000
      - 'EXPRESS_ALLOW_TOKEN_RENEWAL=true'
      - 'EXPRESS_OPENSRP_LOGOUT_URL=null'
      - 'EXPRESS_REACT_BUILD_PATH=/usr/src/web'

      # keycloak
      - 'EXPRESS_OPENSRP_CLIENT_ID=<keycloak-client-id>'
      - 'EXPRESS_OPENSRP_CLIENT_SECRET=<keycloak-client-secret>'
      - 'EXPRESS_OPENSRP_ACCESS_TOKEN_URL=<keycloak-base-url>/auth/realms/<keycloak-realm>/protocol/openid-connect/token'
      - 'EXPRESS_OPENSRP_AUTHORIZATION_URL=<keycloak-base-url>/auth/realms/<keycloak-realm>/protocol/openid-connect/auth'
      - 'EXPRESS_KEYCLOAK_LOGOUT_URL=<keycloak-base-url>/auth/realms/<keycloak-realm>/protocol/openid-connect/logout'
      - 'EXPRESS_OPENSRP_USER_URL=<keycloak-base-url>/auth/realms/<keycloak-realm>/protocol/openid-connect/userinfo'

      # fhir web
      - 'EXPRESS_OPENSRP_CALLBACK_URL=<fhir-web-base-url>/oauth/callback/OpenSRP/'
      - 'EXPRESS_FRONTEND_OPENSRP_CALLBACK_URL=<fhir-web-base-url>/fe/oauth/callback/opensrp'
      - 'EXPRESS_SERVER_LOGOUT_URL=<fhir-web-base-url>/logout'

      # UUID's
      - 'EXPRESS_SESSION_SECRET=<randomly-generated-secret-string>'

      # content security policy configuration
      # remove optional-sentry-base-url config block if your deployment has no sentry
      - 'EXPRESS_CONTENT_SECURITY_POLICY_CONFIG={"connect-src":["''self''","<optional-sentry-base-url>","<keycloak-base-url>","<fhir-server-base-url>"],"default-src":["''self''"],"img-src":["''self''","https://github.com/opensrp/","https://*.githubusercontent.com/opensrp/"]}'
      # to disable CSP
      # - 'EXPRESS_CONTENT_SECURITY_POLICY_CONFIG=false'

    # optional sentry config
    # - 'EXPRESS_RESPONSE_HEADERS={"report-to":", {endpoints:[{url:https://<optional-sentry-base-url>/api/<optional-sentry-projectId>/security/?sentry_key=<optional-sentry-key>\\u0026sentry_environment=<optional-sentry-environment>\\u0026sentry_release=<optional-sentry-release-name>}],group:csp-endpoint,max_age:10886400}"}'

    # optional redis and redis sentinel session store config (use either or neither not both)
    # - 'EXPRESS_REDIS_STAND_ALONE_URL=redis://username:password@redis-base-url:port/db'
    # - 'EXPRESS_REDIS_SENTINEL_CONFIG={"name":"sentinelMasterName","sentinelPassword":"sentinelMasterPassword","sentinels":[{"host":"sentinel-node-1-base-url","port":"12345"},{"host":"sentinel-node-2-base-url","port":"12345"},{"host":"sentinel-node-3-base-url","port":"12345"}]}'


networks:
  casiplus-network:
    driver: bridge

volumes:
  data-keycloak:
  hapi-fhir-data:
  db-data: